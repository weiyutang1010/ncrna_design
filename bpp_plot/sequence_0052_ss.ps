%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Apr 25 12:06:16 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAAAAAAGGGAAAAACCAAAAAACCAAAAAACCGAAAAAGGAAAAAAGCGAAAAAGCAAAAAAGGGAAAAAGCAAAAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[125.00000000 125.00000000]
[101.11299133 132.37637329]
[79.78344727 145.41671753]
[62.32939911 163.31521606]
[49.82939911 184.96585083]
[43.05587006 209.03074646]
[42.42737579 234.02284241]
[47.98275375 258.39779663]
[26.33211899 270.89779663]
[1.57750773 267.40362549]
[-18.99005127 281.61541748]
[-24.47689247 306.00588989]
[-11.97689247 327.65652466]
[11.88928699 335.10000610]
[34.48085403 324.39389038]
[43.83211899 301.20867920]
[65.48275757 288.70867920]
[83.81438446 305.70724487]
[105.77242279 317.65899658]
[130.00000000 323.82540894]
[155.00000000 323.82540894]
[179.22756958 317.65899658]
[201.18562317 305.70724487]
[219.51724243 288.70867920]
[241.16787720 301.20867920]
[235.61250305 325.58361816]
[236.24099731 350.57571411]
[243.01452637 374.64062500]
[255.51452637 396.29125977]
[272.96856689 414.18972778]
[294.29812622 427.23007202]
[318.18511963 434.60644531]
[318.18511963 459.60644531]
[302.78176880 479.29748535]
[304.80578613 504.21542358]
[323.18511963 521.16241455]
[348.18511963 521.16241455]
[366.56445312 504.21542358]
[368.58847046 479.29748535]
[353.18511963 459.60644531]
[353.18511963 434.60644531]
[377.07214355 427.23007202]
[398.40167236 414.18972778]
[415.85574341 396.29125977]
[428.35574341 374.64062500]
[435.12924194 350.57571411]
[435.75775146 325.58361816]
[430.20236206 301.20867920]
[451.85299683 288.70867920]
[476.60760498 292.20285034]
[497.17517090 277.99102783]
[502.66201782 253.60057068]
[490.16201782 231.94993591]
[466.29583740 224.50645447]
[443.70428467 235.21257019]
[434.35299683 258.39779663]
[412.70236206 270.89779663]
[394.37075806 253.89921570]
[372.41268921 241.94744873]
[348.18511963 235.78105164]
[323.18511963 235.78105164]
[298.95755005 241.94744873]
[276.99951172 253.89921570]
[258.66787720 270.89779663]
[237.01724243 258.39779663]
[242.57261658 234.02284241]
[241.94413757 209.03074646]
[235.17060852 184.96585083]
[222.67060852 163.31521606]
[205.21655273 145.41671753]
[183.88700867 132.37637329]
[160.00000000 125.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[142.50000000 224.03548507 100.56976336 259.97903223 245.69930874 1.00000000]
[142.50000000 224.03548507 100.56976336 245.69930874 231.41958524 1.00000000]
[142.50000000 224.03548507 100.56976336 231.41958524 217.13986175 1.00000000]
[142.50000000 224.03548507 100.56976336 217.13986175 202.86013825 1.00000000]
[142.50000000 224.03548507 100.56976336 202.86013825 188.58041476 1.00000000]
[142.50000000 224.03548507 100.56976336 188.58041476 174.30069126 1.00000000]
[142.50000000 224.03548507 100.56976336 174.30069126 160.02096777 1.00000000]
[]
[9.48278212 300.83301162 34.35139098 299.37341131 256.69529379 1.00000000]
[9.48278212 300.83301162 34.35139098 256.69529379 214.01717628 1.00000000]
[9.48278212 300.83301162 34.35139098 214.01717628 171.33905876 1.00000000]
[9.48278212 300.83301162 34.35139098 171.33905876 128.66094124 1.00000000]
[9.48278212 300.83301162 34.35139098 128.66094124 85.98282372 1.00000000]
[9.48278212 300.83301162 34.35139098 85.98282372 43.30470621 1.00000000]
[9.48278212 300.83301162 34.35139098 43.30470621 0.62658869 1.00000000]
[]
[142.50000000 224.03548507 100.56976336 139.97903223 125.69930874 1.00000000]
[142.50000000 224.03548507 100.56976336 125.69930874 111.41958524 1.00000000]
[142.50000000 224.03548507 100.56976336 111.41958524 97.13986175 1.00000000]
[142.50000000 224.03548507 100.56976336 97.13986175 82.86013825 1.00000000]
[142.50000000 224.03548507 100.56976336 82.86013825 68.58041476 1.00000000]
[142.50000000 224.03548507 100.56976336 68.58041476 54.30069126 1.00000000]
[142.50000000 224.03548507 100.56976336 54.30069126 40.02096777 1.00000000]
[]
[335.68512698 335.57097013 100.56976336 199.97903223 185.69930874 1.00000000]
[335.68512698 335.57097013 100.56976336 185.69930874 171.41958524 1.00000000]
[335.68512698 335.57097013 100.56976336 171.41958524 157.13986175 1.00000000]
[335.68512698 335.57097013 100.56976336 157.13986175 142.86013825 1.00000000]
[335.68512698 335.57097013 100.56976336 142.86013825 128.58041476 1.00000000]
[335.68512698 335.57097013 100.56976336 128.58041476 114.30069126 1.00000000]
[335.68512698 335.57097013 100.56976336 114.30069126 100.02096777 1.00000000]
[]
[335.68512698 489.16602323 34.35139098 239.37341131 196.69529379 1.00000000]
[335.68512698 489.16602323 34.35139098 196.69529379 154.01717628 1.00000000]
[335.68512698 489.16602323 34.35139098 154.01717628 111.33905876 1.00000000]
[335.68512698 489.16602323 34.35139098 111.33905876 68.66094124 1.00000000]
[335.68512698 489.16602323 34.35139098 68.66094124 25.98282372 1.00000000]
[335.68512698 489.16602323 34.35139098 25.98282372 343.30470621 1.00000000]
[335.68512698 489.16602323 34.35139098 343.30470621 300.62658869 1.00000000]
[]
[335.68512698 335.57097013 100.56976336 79.97903223 65.69930874 1.00000000]
[335.68512698 335.57097013 100.56976336 65.69930874 51.41958524 1.00000000]
[335.68512698 335.57097013 100.56976336 51.41958524 37.13986175 1.00000000]
[335.68512698 335.57097013 100.56976336 37.13986175 22.86013825 1.00000000]
[335.68512698 335.57097013 100.56976336 22.86013825 8.58041476 1.00000000]
[335.68512698 335.57097013 100.56976336 8.58041476 354.30069126 1.00000000]
[335.68512698 335.57097013 100.56976336 354.30069126 340.02096777 1.00000000]
[]
[468.70234486 258.77344358 34.35139098 119.37341131 76.69529379 1.00000000]
[468.70234486 258.77344358 34.35139098 76.69529379 34.01717628 1.00000000]
[468.70234486 258.77344358 34.35139098 34.01717628 351.33905876 1.00000000]
[468.70234486 258.77344358 34.35139098 351.33905876 308.66094124 1.00000000]
[468.70234486 258.77344358 34.35139098 308.66094124 265.98282372 1.00000000]
[468.70234486 258.77344358 34.35139098 265.98282372 223.30470621 1.00000000]
[468.70234486 258.77344358 34.35139098 223.30470621 180.62658869 1.00000000]
[]
[335.68512698 335.57097013 100.56976336 319.97903223 305.69930874 1.00000000]
[335.68512698 335.57097013 100.56976336 305.69930874 291.41958524 1.00000000]
[335.68512698 335.57097013 100.56976336 291.41958524 277.13986175 1.00000000]
[335.68512698 335.57097013 100.56976336 277.13986175 262.86013825 1.00000000]
[335.68512698 335.57097013 100.56976336 262.86013825 248.58041476 1.00000000]
[335.68512698 335.57097013 100.56976336 248.58041476 234.30069126 1.00000000]
[335.68512698 335.57097013 100.56976336 234.30069126 220.02096777 1.00000000]
[]
[142.50000000 224.03548507 100.56976336 19.97903223 5.69930874 1.00000000]
[142.50000000 224.03548507 100.56976336 5.69930874 351.41958524 1.00000000]
[142.50000000 224.03548507 100.56976336 351.41958524 337.13986175 1.00000000]
[142.50000000 224.03548507 100.56976336 337.13986175 322.86013825 1.00000000]
[142.50000000 224.03548507 100.56976336 322.86013825 308.58041476 1.00000000]
[142.50000000 224.03548507 100.56976336 308.58041476 294.30069126 1.00000000]
[142.50000000 224.03548507 100.56976336 294.30069126 280.02096777 1.00000000]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 75]
[3 74]
[10 19]
[11 18]
[26 67]
[27 66]
[34 43]
[35 42]
[50 59]
[51 58]
] def

init

% Start Annotations
1 1 13 1.0 1.0 1.0 omark 2 2 13 1.0 0.594496516051445 0.594496516051445 omark 3 3 13 1.0 0.5944843258245125 0.5944843258245125 omark 4 4 13 1.0 1.0 1.0 omark 5 5 13 1.0 1.0 1.0 omark 6 6 13 1.0 1.0 1.0 omark 7 7 13 1.0 1.0 1.0 omark 8 8 13 1.0 1.0 1.0 omark 9 9 13 1.0 1.0 1.0 omark 10 10 13 1.0 0.8596407012757252 0.8596407012757252 omark 11 11 13 1.0 0.8606799384778063 0.8606799384778063 omark 12 12 13 1.0 0.9458459596477562 0.9458459596477562 omark 13 13 13 1.0 1.0 1.0 omark 14 14 13 1.0 1.0 1.0 omark 15 15 13 1.0 1.0 1.0 omark 16 16 13 1.0 1.0 1.0 omark 17 17 13 1.0 1.0 1.0 omark 18 18 13 1.0 0.8606799384778063 0.8606799384778063 omark 19 19 13 1.0 0.8596407012757252 0.8596407012757252 omark 20 20 13 1.0 1.0 1.0 omark 21 21 13 1.0 1.0 1.0 omark 22 22 13 1.0 1.0 1.0 omark 23 23 13 1.0 1.0 1.0 omark 24 24 13 1.0 1.0 1.0 omark 25 25 13 1.0 1.0 1.0 omark 26 26 13 1.0 0.17489058453716733 0.17489058453716733 omark 27 27 13 1.0 0.1753950534163088 0.1753950534163088 omark 28 28 13 1.0 1.0 1.0 omark 29 29 13 1.0 1.0 1.0 omark 30 30 13 1.0 1.0 1.0 omark 31 31 13 1.0 1.0 1.0 omark 32 32 13 1.0 1.0 1.0 omark 33 33 13 1.0 1.0 1.0 omark 34 34 13 1.0 0.9267205253395456 0.9267205253395456 omark 35 35 13 1.0 0.9346683726974024 0.9346683726974024 omark 36 36 13 1.0 0.9983141270792956 0.9983141270792956 omark 37 37 13 1.0 1.0 1.0 omark 38 38 13 1.0 1.0 1.0 omark 39 39 13 1.0 1.0 1.0 omark 40 40 13 1.0 1.0 1.0 omark 41 41 13 1.0 1.0 1.0 omark 42 42 13 1.0 0.9346683726974024 0.9346683726974024 omark 43 43 13 1.0 0.9267205253395456 0.9267205253395456 omark 44 44 13 1.0 1.0 1.0 omark 45 45 13 1.0 1.0 1.0 omark 46 46 13 1.0 1.0 1.0 omark 47 47 13 1.0 1.0 1.0 omark 48 48 13 1.0 1.0 1.0 omark 49 49 13 1.0 1.0 1.0 omark 50 50 13 1.0 0.9345974091587639 0.9345974091587639 omark 51 51 13 1.0 0.936301504731816 0.936301504731816 omark 52 52 13 1.0 0.9985886507324602 0.9985886507324602 omark 53 53 13 1.0 1.0 1.0 omark 54 54 13 1.0 1.0 1.0 omark 55 55 13 1.0 1.0 1.0 omark 56 56 13 1.0 1.0 1.0 omark 57 57 13 1.0 1.0 1.0 omark 58 58 13 1.0 0.936301504731816 0.936301504731816 omark 59 59 13 1.0 0.9345974091587639 0.9345974091587639 omark 60 60 13 1.0 1.0 1.0 omark 61 61 13 1.0 1.0 1.0 omark 62 62 13 1.0 1.0 1.0 omark 63 63 13 1.0 1.0 1.0 omark 64 64 13 1.0 1.0 1.0 omark 65 65 13 1.0 1.0 1.0 omark 66 66 13 1.0 0.1753950534163088 0.1753950534163088 omark 67 67 13 1.0 0.17489058453716733 0.17489058453716733 omark 68 68 13 1.0 0.9229705488903273 0.9229705488903273 omark 69 69 13 1.0 1.0 1.0 omark 70 70 13 1.0 1.0 1.0 omark 71 71 13 1.0 1.0 1.0 omark 72 72 13 1.0 1.0 1.0 omark 73 73 13 1.0 1.0 1.0 omark 74 74 13 1.0 0.5944843258245125 0.5944843258245125 omark 75 75 13 1.0 0.594496516051445 0.594496516051445 omark 76 76 13 1.0 1.0 1.0 omark 77 77 13 1.0 1.0 1.0 omark 78 78 13 1.0 1.0 1.0 omark 79 79 13 1.0 1.0 1.0 omark 80 80 13 1.0 1.0 1.0 omark 10 cmark 10 -1.3 -1.3 (10) Label 20 cmark 20 -1.3 -1.3 (20) Label 30 cmark 30 -1.3 -1.3 (30) Label 40 cmark 40 -1.3 -1.3 (40) Label 50 cmark 50 -1.3 -1.3 (50) Label 60 cmark 60 -1.3 -1.3 (60) Label 70 cmark 70 -1.3 -1.3 (70) Label 80 cmark 80 -1.3 -1.3 (80) Label 1 cmark 1 0.30000000000000004 -1.1 (1) Label 80 cmark 80 -1.3 -1.3 (80) Label 
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
