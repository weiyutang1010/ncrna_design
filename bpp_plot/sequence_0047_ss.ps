%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Apr 25 11:55:15 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAAAAAGCGGCAAAGCCAGGGUUACCAAAAAAAAAGCGAAAAUCCC\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[77.80745697 186.51048279]
[61.79554749 205.70993042]
[54.45752716 229.60874939]
[56.93601608 254.48558044]
[68.84507751 276.46679688]
[88.33032990 292.12966919]
[112.35767365 299.03521729]
[117.29022980 323.54379272]
[97.20474243 338.42913818]
[75.19178009 326.57882690]
[53.17881775 314.72854614]
[33.06291580 299.88433838]
[11.19636917 312.00265503]
[13.12083435 336.92849731]
[36.58840179 345.54669189]
[58.60136032 357.39697266]
[80.61432648 369.24728394]
[79.24833679 394.20993042]
[86.87830353 418.01715088]
[68.57452393 435.04571533]
[45.32859421 444.24499512]
[39.81616211 468.62966919]
[56.84472275 486.93344116]
[81.56335449 483.19326782]
[92.41450500 460.67098999]
[110.71828461 443.64242554]
[133.91351318 452.96881104]
[158.90968323 453.40594482]
[182.41683960 444.89630127]
[201.34094238 428.55990601]
[213.19123840 406.54693604]
[216.40798950 381.75476074]
[210.56781006 357.44647217]
[196.43939209 336.82153320]
[175.88227844 322.59460449]
[151.60221863 316.63821411]
[146.66966248 292.12966919]
[166.15492249 276.46679688]
[178.06398010 254.48558044]
[180.54248047 229.60874939]
[173.20445251 205.70993042]
[157.19253540 186.51048279]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[117.50000000 235.88968475 63.35458712 253.96508423 231.20659677 1.00000000]
[117.50000000 235.88968475 63.35458712 231.20659677 208.44810932 1.00000000]
[117.50000000 235.88968475 63.35458712 208.44810932 185.68962186 1.00000000]
[117.50000000 235.88968475 63.35458712 185.68962186 162.93113441 1.00000000]
[117.50000000 235.88968475 63.35458712 162.93113441 140.17264695 1.00000000]
[117.50000000 235.88968475 63.35458712 140.17264695 117.41415950 1.00000000]
[117.50000000 235.88968475 63.35458712 117.41415950 94.65567205 1.00000000]
[]
[147.59651244 385.43132864 68.90963010 243.90903627 223.00675319 1.00000000]
[]
[]
[31.56416509 322.96732077 23.13159456 339.13483024 273.71493171 1.00000000]
[31.56416509 322.96732077 23.13159456 273.71493171 208.29503318 1.00000000]
[31.56416509 322.96732077 23.13159456 208.29503318 142.87513466 1.00000000]
[31.56416509 322.96732077 23.13159456 142.87513466 77.45523613 1.00000000]
[]
[]
[147.59651244 385.43132864 68.90963010 193.58331318 172.68103010 1.00000000]
[147.59651244 385.43132864 68.90963010 172.68103010 151.77874703 1.00000000]
[]
[65.66242591 461.65709600 26.77024824 276.24506002 220.57384682 1.00000000]
[65.66242591 461.65709600 26.77024824 220.57384682 164.90263362 1.00000000]
[65.66242591 461.65709600 26.77024824 164.90263362 109.23142042 1.00000000]
[65.66242591 461.65709600 26.77024824 109.23142042 53.56020723 1.00000000]
[65.66242591 461.65709600 26.77024824 53.56020723 357.88899403 1.00000000]
[]
[147.59651244 385.43132864 68.90963010 122.35530702 101.45302394 1.00000000]
[147.59651244 385.43132864 68.90963010 101.45302394 80.55074087 1.00000000]
[147.59651244 385.43132864 68.90963010 80.55074087 59.64845780 1.00000000]
[147.59651244 385.43132864 68.90963010 59.64845780 38.74617472 1.00000000]
[147.59651244 385.43132864 68.90963010 38.74617472 17.84389165 1.00000000]
[147.59651244 385.43132864 68.90963010 17.84389165 356.94160857 1.00000000]
[147.59651244 385.43132864 68.90963010 356.94160857 336.03932550 1.00000000]
[147.59651244 385.43132864 68.90963010 336.03932550 315.13704243 1.00000000]
[147.59651244 385.43132864 68.90963010 315.13704243 294.23475935 1.00000000]
[147.59651244 385.43132864 68.90963010 294.23475935 273.33247628 1.00000000]
[]
[117.50000000 235.88968475 63.35458712 62.58584050 39.82735305 1.00000000]
[117.50000000 235.88968475 63.35458712 39.82735305 17.06886559 1.00000000]
[117.50000000 235.88968475 63.35458712 17.06886559 354.31037814 1.00000000]
[117.50000000 235.88968475 63.35458712 354.31037814 331.55189068 1.00000000]
[117.50000000 235.88968475 63.35458712 331.55189068 308.79340323 1.00000000]
[117.50000000 235.88968475 63.35458712 308.79340323 286.03491577 1.00000000]
[]
[]
[]
] def
/pairs [
[1 50]
[2 49]
[3 48]
[4 47]
[11 41]
[12 40]
[13 21]
[14 20]
[15 19]
[23 30]
[24 29]
] def

init

% Start Annotations
1 1 13 1.0 0.9745038682253857 0.9745038682253857 omark 2 2 13 1.0 0.9978302081284655 0.9978302081284655 omark 3 3 13 1.0 0.9979181067967393 0.9979181067967393 omark 4 4 13 1.0 0.9866076382373663 0.9866076382373663 omark 5 5 13 1.0 0.9980183547514294 0.9980183547514294 omark 6 6 13 1.0 0.9992839975055969 0.9992839975055969 omark 7 7 13 1.0 0.9999710107514815 0.9999710107514815 omark 8 8 13 1.0 0.9999783953182669 0.9999783953182669 omark 9 9 13 1.0 0.999971191994429 0.999971191994429 omark 10 10 13 1.0 0.999946218419357 0.999946218419357 omark 11 11 13 1.0 0.9788261586529682 0.9788261586529682 omark 12 12 13 1.0 0.9770527213514401 0.9770527213514401 omark 13 13 13 1.0 0.9516100560026003 0.9516100560026003 omark 14 14 13 1.0 0.9535634962366615 0.9535634962366615 omark 15 15 13 1.0 0.9397616319606785 0.9397616319606785 omark 16 16 13 1.0 0.9999588041254812 0.9999588041254812 omark 17 17 13 1.0 0.9999392245807505 0.9999392245807505 omark 18 18 13 1.0 0.9997849407465607 0.9997849407465607 omark 19 19 13 1.0 0.9397616319606785 0.9397616319606785 omark 20 20 13 1.0 0.9535634962366615 0.9535634962366615 omark 21 21 13 1.0 0.9516100560026003 0.9516100560026003 omark 22 22 13 1.0 0.9999697311207651 0.9999697311207651 omark 23 23 13 1.0 0.9870096047429865 0.9870096047429865 omark 24 24 13 1.0 0.987889453813008 0.987889453813008 omark 25 25 13 1.0 0.9970349054840295 0.9970349054840295 omark 26 26 13 1.0 0.9983617842152124 0.9983617842152124 omark 27 27 13 1.0 0.9983224054348174 0.9983224054348174 omark 28 28 13 1.0 0.9999999515819281 0.9999999515819281 omark 29 29 13 1.0 0.987889453813008 0.987889453813008 omark 30 30 13 1.0 0.9870096047429865 0.9870096047429865 omark 31 31 13 1.0 0.9999476103431308 0.9999476103431308 omark 32 32 13 1.0 0.9998140991864851 0.9998140991864851 omark 33 33 13 1.0 0.9997480343513647 0.9997480343513647 omark 34 34 13 1.0 0.9997003903876539 0.9997003903876539 omark 35 35 13 1.0 0.9997557386514564 0.9997557386514564 omark 36 36 13 1.0 0.9997681960636297 0.9997681960636297 omark 37 37 13 1.0 0.9998274024490288 0.9998274024490288 omark 38 38 13 1.0 0.9998874483741595 0.9998874483741595 omark 39 39 13 1.0 0.999781872453362 0.999781872453362 omark 40 40 13 1.0 0.9770527213514401 0.9770527213514401 omark 41 41 13 1.0 0.9788261586529682 0.9788261586529682 omark 42 42 13 1.0 0.9983495829792827 0.9983495829792827 omark 43 43 13 1.0 0.9999818015681291 0.9999818015681291 omark 44 44 13 1.0 0.99999380981143 0.99999380981143 omark 45 45 13 1.0 0.9997415587095281 0.9997415587095281 omark 46 46 13 1.0 0.9997134652243932 0.9997134652243932 omark 47 47 13 1.0 0.9866076382373663 0.9866076382373663 omark 48 48 13 1.0 0.9979181067967393 0.9979181067967393 omark 49 49 13 1.0 0.9978302081284655 0.9978302081284655 omark 50 50 13 1.0 0.9745038682253857 0.9745038682253857 omark 10 cmark 10 -1.3 -1.3 (10) Label 20 cmark 20 -1.3 -1.3 (20) Label 30 cmark 30 -1.3 -1.3 (30) Label 40 cmark 40 -1.3 -1.3 (40) Label 50 cmark 50 -1.3 -1.3 (50) Label 1 cmark 1 0.30000000000000004 -1.1 (1) Label 50 cmark 50 -1.3 -1.3 (50) Label 
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
