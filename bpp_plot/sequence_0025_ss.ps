%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Apr 25 12:05:21 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAAAAACCCAAAAAGCCAAAAACCGAAAAAGCCGAAAAAAAGGCACGGAGGCAGGGAGGC\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[80.90137482 166.13203430]
[73.75732422 190.08955383]
[80.90137482 214.04705811]
[100.00000000 230.17909241]
[124.81482697 233.21627808]
[147.24034119 222.16654968]
[170.15248108 232.16822815]
[193.06463623 242.16990662]
[197.95712280 266.68649292]
[214.08073425 285.79223633]
[237.42607117 294.73623657]
[262.18801880 291.29440308]
[282.20916748 276.32263184]
[292.51095581 253.54383850]
[317.08969116 248.97381592]
[341.66845703 244.40380859]
[357.67385864 263.60867310]
[380.16241455 274.52951050]
[405.15252686 275.23281860]
[428.21969604 265.59405518]
[445.27987671 247.31976318]
[453.31259155 223.64540100]
[477.89132690 219.07537842]
[502.47009277 214.50537109]
[518.47546387 233.71023560]
[540.96405029 244.63108826]
[565.95416260 245.33439636]
[589.02130127 235.69561768]
[606.08148193 217.42132568]
[614.11419678 193.74696350]
[638.69299316 189.17694092]
[663.27172852 184.60693359]
[683.06945801 199.87290955]
[708.03302002 201.22206116]
[729.36071777 188.17872620]
[739.53283691 165.34173584]
[734.96282959 140.76298523]
[717.26196289 123.10849762]
[692.67132568 118.60292816]
[669.86108398 128.83485413]
[656.87371826 150.19668579]
[632.29492188 154.76669312]
[607.71618652 159.33671570]
[544.23211670 128.50769043]
[496.07205200 180.09512329]
[471.49331665 184.66513062]
[446.91455078 189.23515320]
[383.43051147 158.40612793]
[335.27041626 209.99354553]
[310.69168091 214.56356812]
[286.11291504 219.13359070]
[248.81974792 195.11738586]
[207.06697083 210.09289551]
[184.15483093 200.09121704]
[161.24267578 190.08955383]
[154.09863281 166.13203430]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[117.50000000 190.08954835 43.74267810 246.41763582 213.20881791 1.00000000]
[117.50000000 190.08954835 43.74267810 213.20881791 180.00000000 1.00000000]
[117.50000000 190.08954835 43.74267810 180.00000000 146.79118209 1.00000000]
[117.50000000 190.08954835 43.74267810 146.79118209 113.58236418 1.00000000]
[117.50000000 190.08954835 43.74267810 113.58236418 80.37354627 1.00000000]
[117.50000000 190.08954835 43.74267810 80.37354627 47.16472836 1.00000000]
[]
[]
[243.12291043 244.92680701 50.13413922 183.15231658 154.27644943 1.00000000]
[243.12291043 244.92680701 50.13413922 154.27644943 125.40058227 1.00000000]
[243.12291043 244.92680701 50.13413922 125.40058227 96.52471512 1.00000000]
[243.12291043 244.92680701 50.13413922 96.52471512 67.64884796 1.00000000]
[243.12291043 244.92680701 50.13413922 67.64884796 38.77298081 1.00000000]
[243.12291043 244.92680701 50.13413922 38.77298081 9.89711366 1.00000000]
[]
[]
[394.29150777 216.81947658 59.41448475 152.33705205 128.04705672 1.00000000]
[394.29150777 216.81947658 59.41448475 128.04705672 103.75706139 1.00000000]
[394.29150777 216.81947658 59.41448475 103.75706139 79.46706606 1.00000000]
[394.29150777 216.81947658 59.41448475 79.46706606 55.17707072 1.00000000]
[394.29150777 216.81947658 59.41448475 55.17707072 30.88707539 1.00000000]
[394.29150777 216.81947658 59.41448475 30.88707539 6.59708006 1.00000000]
[]
[]
[555.09314181 186.92104039 59.41448475 152.33705205 128.04705672 1.00000000]
[555.09314181 186.92104039 59.41448475 128.04705672 103.75706139 1.00000000]
[555.09314181 186.92104039 59.41448475 103.75706139 79.46706606 1.00000000]
[555.09314181 186.92104039 59.41448475 79.46706606 55.17707072 1.00000000]
[555.09314181 186.92104039 59.41448475 55.17707072 30.88707539 1.00000000]
[555.09314181 186.92104039 59.41448475 30.88707539 6.59708006 1.00000000]
[]
[]
[697.72092049 160.40173562 42.10271758 144.90680117 110.36463781 1.00000000]
[697.72092049 160.40173562 42.10271758 110.36463781 75.82247445 1.00000000]
[697.72092049 160.40173562 42.10271758 75.82247445 41.28031109 1.00000000]
[697.72092049 160.40173562 42.10271758 41.28031109 6.73814773 1.00000000]
[697.72092049 160.40173562 42.10271758 6.73814773 332.19598438 1.00000000]
[697.72092049 160.40173562 42.10271758 332.19598438 297.65382102 1.00000000]
[697.72092049 160.40173562 42.10271758 297.65382102 263.11165766 1.00000000]
[697.72092049 160.40173562 42.10271758 263.11165766 228.56949430 1.00000000]
[697.72092049 160.40173562 42.10271758 228.56949430 194.02733094 1.00000000]
[]
[]
[555.09314181 186.92104039 59.41448475 332.33705205 259.46706606 1.00000000]
[555.09314181 186.92104039 59.41448475 259.46706606 186.59708006 1.00000000]
[]
[]
[394.29150777 216.81947658 59.41448475 332.33705205 259.46706606 1.00000000]
[394.29150777 216.81947658 59.41448475 259.46706606 186.59708006 1.00000000]
[]
[]
[243.12291043 244.92680701 50.13413922 329.03701845 276.52471512 1.00000000]
[243.12291043 244.92680701 50.13413922 276.52471512 224.01241178 1.00000000]
[]
[]
[117.50000000 190.08954835 43.74267810 360.00000000 326.79118209 1.00000000]
[117.50000000 190.08954835 43.74267810 326.79118209 293.58236418 1.00000000]
[]
[]
] def
/pairs [
[1 62]
[2 61]
[3 60]
[9 58]
[10 57]
[11 56]
[17 54]
[18 53]
[19 52]
[25 50]
[26 49]
[27 48]
[33 46]
[34 45]
[35 44]
] def

init

% Start Annotations
1 1 13 1.0 0.8243583400177145 0.8243583400177145 omark 2 2 13 1.0 0.8440132538576779 0.8440132538576779 omark 3 3 13 1.0 0.841676946383304 0.841676946383304 omark 4 4 13 1.0 1.0 1.0 omark 5 5 13 1.0 1.0 1.0 omark 6 6 13 1.0 1.0 1.0 omark 7 7 13 1.0 1.0 1.0 omark 8 8 13 1.0 1.0 1.0 omark 9 9 13 1.0 0.9275052287378478 0.9275052287378478 omark 10 10 13 1.0 0.9308165540438536 0.9308165540438536 omark 11 11 13 1.0 0.9282400432981768 0.9282400432981768 omark 12 12 13 1.0 1.0 1.0 omark 13 13 13 1.0 1.0 1.0 omark 14 14 13 1.0 1.0 1.0 omark 15 15 13 1.0 1.0 1.0 omark 16 16 13 1.0 1.0 1.0 omark 17 17 13 1.0 0.9829417153893211 0.9829417153893211 omark 18 18 13 1.0 0.9852683506413941 0.9852683506413941 omark 19 19 13 1.0 0.9824000245763681 0.9824000245763681 omark 20 20 13 1.0 1.0 1.0 omark 21 21 13 1.0 1.0 1.0 omark 22 22 13 1.0 1.0 1.0 omark 23 23 13 1.0 1.0 1.0 omark 24 24 13 1.0 1.0 1.0 omark 25 25 13 1.0 0.9787965495494543 0.9787965495494543 omark 26 26 13 1.0 0.9815692782909977 0.9815692782909977 omark 27 27 13 1.0 0.9696291779554912 0.9696291779554912 omark 28 28 13 1.0 1.0 1.0 omark 29 29 13 1.0 1.0 1.0 omark 30 30 13 1.0 1.0 1.0 omark 31 31 13 1.0 1.0 1.0 omark 32 32 13 1.0 1.0 1.0 omark 33 33 13 1.0 0.996496320306198 0.996496320306198 omark 34 34 13 1.0 0.9989892893985259 0.9989892893985259 omark 35 35 13 1.0 0.9988947961471861 0.9988947961471861 omark 36 36 13 1.0 0.9996754713711525 0.9996754713711525 omark 37 37 13 1.0 1.0 1.0 omark 38 38 13 1.0 1.0 1.0 omark 39 39 13 1.0 1.0 1.0 omark 40 40 13 1.0 1.0 1.0 omark 41 41 13 1.0 1.0 1.0 omark 42 42 13 1.0 1.0 1.0 omark 43 43 13 1.0 1.0 1.0 omark 44 44 13 1.0 0.9988947961471861 0.9988947961471861 omark 45 45 13 1.0 0.9989892893985259 0.9989892893985259 omark 46 46 13 1.0 0.996496320306198 0.996496320306198 omark 47 47 13 1.0 1.0 1.0 omark 48 48 13 1.0 0.9696291779554912 0.9696291779554912 omark 49 49 13 1.0 0.9815692782909977 0.9815692782909977 omark 50 50 13 1.0 0.9787965495494543 0.9787965495494543 omark 51 51 13 1.0 1.0 1.0 omark 52 52 13 1.0 0.9824000245763681 0.9824000245763681 omark 53 53 13 1.0 0.9852683506413941 0.9852683506413941 omark 54 54 13 1.0 0.9829417153893211 0.9829417153893211 omark 55 55 13 1.0 1.0 1.0 omark 56 56 13 1.0 0.9282400432981768 0.9282400432981768 omark 57 57 13 1.0 0.9308165540438536 0.9308165540438536 omark 58 58 13 1.0 0.9275052287378478 0.9275052287378478 omark 59 59 13 1.0 1.0 1.0 omark 60 60 13 1.0 0.841676946383304 0.841676946383304 omark 61 61 13 1.0 0.8440132538576779 0.8440132538576779 omark 62 62 13 1.0 0.8243583400177145 0.8243583400177145 omark 10 cmark 10 -1.3 -1.3 (10) Label 20 cmark 20 -1.3 -1.3 (20) Label 30 cmark 30 -1.3 -1.3 (30) Label 40 cmark 40 -1.3 -1.3 (40) Label 50 cmark 50 -1.3 -1.3 (50) Label 60 cmark 60 -1.3 -1.3 (60) Label 1 cmark 1 0.30000000000000004 -1.1 (1) Label 62 cmark 62 -1.3 -1.3 (62) Label 
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
