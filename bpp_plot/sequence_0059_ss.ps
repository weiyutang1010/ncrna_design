%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Apr 25 12:05:58 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUAGCGCCGUGUCUUGCCUGUUGGCAAGGUCCGGGCAGACGACGUGAGUCGUCUGCCGCGCACAAU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[225.00000000 125.00000000]
[225.00000000 150.00000000]
[225.00000000 175.00000000]
[212.50000000 196.65063477]
[190.84936523 209.15063477]
[169.19873047 196.65063477]
[169.19873047 221.65063477]
[147.54809570 234.15063477]
[125.89746094 246.65063477]
[104.24682617 259.15063477]
[82.59619141 271.65063477]
[60.94555283 284.15063477]
[39.29491806 296.65063477]
[17.64428520 309.15063477]
[-7.07085609 312.91384888]
[-17.90101433 335.44622803]
[-5.40101385 357.09686279]
[19.52766991 358.98385620]
[35.14428329 339.46151733]
[56.79491806 326.96151733]
[78.44555664 314.46151733]
[100.09619141 301.96151733]
[121.74682617 289.46151733]
[143.39746094 276.96151733]
[165.04809570 264.46151733]
[186.69873047 276.96151733]
[186.69873047 251.96151733]
[208.34936523 239.46151733]
[230.00000000 226.96151733]
[255.00000000 226.96151733]
[276.65063477 239.46151733]
[298.30126953 251.96151733]
[319.95190430 264.46151733]
[341.60253906 276.96151733]
[363.25317383 289.46151733]
[384.90380859 301.96151733]
[406.55444336 314.46151733]
[428.20507812 326.96151733]
[449.85571289 339.46151733]
[465.47232056 358.98385620]
[490.40100098 357.09686279]
[502.90100098 335.44622803]
[492.07086182 312.91384888]
[467.35571289 309.15063477]
[445.70507812 296.65063477]
[424.05444336 284.15063477]
[402.40380859 271.65063477]
[380.75317383 259.15063477]
[359.10253906 246.65063477]
[337.45190430 234.15063477]
[315.80126953 221.65063477]
[294.15063477 209.15063477]
[272.50000000 196.65063477]
[260.00000000 175.00000000]
[260.00000000 150.00000000]
[260.00000000 125.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[242.50000000 199.53738641 30.13856884 234.50363342 185.49636647 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[8.85013601 334.43519884 26.77024824 289.17803289 233.50681969 1.00000000]
[8.85013601 334.43519884 26.77024824 233.50681969 177.83560650 1.00000000]
[8.85013601 334.43519884 26.77024824 177.83560650 122.16439330 1.00000000]
[8.85013601 334.43519884 26.77024824 122.16439330 66.49318010 1.00000000]
[8.85013601 334.43519884 26.77024824 66.49318010 10.82196690 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[242.50000000 199.53738641 30.13856884 114.50363332 65.49636637 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[476.14986471 334.43519759 26.77024824 169.17803279 113.50681959 1.00000000]
[476.14986471 334.43519759 26.77024824 113.50681959 57.83560639 1.00000000]
[476.14986471 334.43519759 26.77024824 57.83560639 2.16439320 1.00000000]
[476.14986471 334.43519759 26.77024824 2.16439320 306.49318000 1.00000000]
[476.14986471 334.43519759 26.77024824 306.49318000 250.82196680 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[242.50000000 199.53738641 30.13856884 354.50363322 305.49636658 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 63]
[7 62]
[8 61]
[9 60]
[10 35]
[11 34]
[13 33]
[14 31]
[15 30]
[16 29]
[17 28]
[18 27]
[19 26]
[20 25]
[36 59]
[37 58]
[38 57]
[39 56]
[40 55]
[41 54]
[42 53]
[43 52]
[44 51]
[45 50]
] def

init

% Start Annotations
1 1 13 1.0 0.9999684055518312 0.9999684055518312 omark 2 2 13 1.0 0.9857952518775648 0.9857952518775648 omark 3 3 13 1.0 0.9763768155903977 0.9763768155903977 omark 4 4 13 1.0 0.974481309554837 0.974481309554837 omark 5 5 13 1.0 0.9999298260815085 0.9999298260815085 omark 6 6 13 1.0 0.9958158298372736 0.9958158298372736 omark 7 7 13 1.0 0.9979171635391476 0.9979171635391476 omark 8 8 13 1.0 0.9977902784657853 0.9977902784657853 omark 9 9 13 1.0 0.9923211056789609 0.9923211056789609 omark 10 10 13 1.0 0.9311408020463023 0.9311408020463023 omark 11 11 13 1.0 0.9459595922028128 0.9459595922028128 omark 12 12 13 1.0 0.997863277487799 0.997863277487799 omark 13 13 13 1.0 0.511896700428366 0.511896700428366 omark 14 14 13 1.0 0.9015597882057308 0.9015597882057308 omark 15 15 13 1.0 0.9947527050512093 0.9947527050512093 omark 16 16 13 1.0 0.9961936983535093 0.9961936983535093 omark 17 17 13 1.0 0.9975739096198643 0.9975739096198643 omark 18 18 13 1.0 0.9999723805933146 0.9999723805933146 omark 19 19 13 1.0 0.999976913400608 0.999976913400608 omark 20 20 13 1.0 0.9988829367700457 0.9988829367700457 omark 21 21 13 1.0 0.9999866642298971 0.9999866642298971 omark 22 22 13 1.0 0.9999998403950636 0.9999998403950636 omark 23 23 13 1.0 0.999999994006378 0.999999994006378 omark 24 24 13 1.0 0.9999999379184527 0.9999999379184527 omark 25 25 13 1.0 0.9988829367700457 0.9988829367700457 omark 26 26 13 1.0 0.999976913400608 0.999976913400608 omark 27 27 13 1.0 0.9999723805933146 0.9999723805933146 omark 28 28 13 1.0 0.9975739096198643 0.9975739096198643 omark 29 29 13 1.0 0.9961936983535093 0.9961936983535093 omark 30 30 13 1.0 0.9947527050512093 0.9947527050512093 omark 31 31 13 1.0 0.9015597882057308 0.9015597882057308 omark 32 32 13 1.0 0.8301737426394333 0.8301737426394333 omark 33 33 13 1.0 0.511896700428366 0.511896700428366 omark 34 34 13 1.0 0.9459595922028128 0.9459595922028128 omark 35 35 13 1.0 0.9311408020463023 0.9311408020463023 omark 36 36 13 1.0 0.9959674919385163 0.9959674919385163 omark 37 37 13 1.0 0.9998210796533247 0.9998210796533247 omark 38 38 13 1.0 0.9999786868850197 0.9999786868850197 omark 39 39 13 1.0 0.9995105065456596 0.9995105065456596 omark 40 40 13 1.0 0.999966812092427 0.999966812092427 omark 41 41 13 1.0 0.9997427866967483 0.9997427866967483 omark 42 42 13 1.0 0.9999165483599705 0.9999165483599705 omark 43 43 13 1.0 0.9999386236632705 0.9999386236632705 omark 44 44 13 1.0 0.9995597239717683 0.9995597239717683 omark 45 45 13 1.0 0.9987192940094345 0.9987192940094345 omark 46 46 13 1.0 0.9999998709949129 0.9999998709949129 omark 47 47 13 1.0 0.9999999997935256 0.9999999997935256 omark 48 48 13 1.0 0.9999999992736625 0.9999999992736625 omark 49 49 13 1.0 0.9999999999916825 0.9999999999916825 omark 50 50 13 1.0 0.9987192940094345 0.9987192940094345 omark 51 51 13 1.0 0.9995597239717683 0.9995597239717683 omark 52 52 13 1.0 0.9999386236632705 0.9999386236632705 omark 53 53 13 1.0 0.9999165483599705 0.9999165483599705 omark 54 54 13 1.0 0.9997427866967483 0.9997427866967483 omark 55 55 13 1.0 0.999966812092427 0.999966812092427 omark 56 56 13 1.0 0.9995105065456596 0.9995105065456596 omark 57 57 13 1.0 0.9999786868850197 0.9999786868850197 omark 58 58 13 1.0 0.9998210796533247 0.9998210796533247 omark 59 59 13 1.0 0.9959674919385163 0.9959674919385163 omark 60 60 13 1.0 0.9923211056789609 0.9923211056789609 omark 61 61 13 1.0 0.9977902784657853 0.9977902784657853 omark 62 62 13 1.0 0.9979171635391476 0.9979171635391476 omark 63 63 13 1.0 0.9958158298372736 0.9958158298372736 omark 64 64 13 1.0 0.9913930539329706 0.9913930539329706 omark 65 65 13 1.0 0.999190768421359 0.999190768421359 omark 66 66 13 1.0 0.9776434345052042 0.9776434345052042 omark 67 67 13 1.0 0.9812742321181995 0.9812742321181995 omark 68 68 13 1.0 0.9856997263279484 0.9856997263279484 omark 10 cmark 10 -1.3 -1.3 (10) Label 20 cmark 20 -1.3 -1.3 (20) Label 30 cmark 30 -1.3 -1.3 (30) Label 40 cmark 40 -1.3 -1.3 (40) Label 50 cmark 50 -1.3 -1.3 (50) Label 60 cmark 60 -1.3 -1.3 (60) Label 1 cmark 1 0.30000000000000004 -1.1 (1) Label 68 cmark 68 -1.3 -1.3 (68) Label 
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
